	public boolean upload(MultipartFile file, String name, String title, String comments) {

		try {
			InputStream is = file.getInputStream();
			ZipInputStream zis = new ZipInputStream(new BufferedInputStream(is));
	
			ZipEntry zipEntry;
			while ((zipEntry = zis.getNextEntry()) != null) {
				if (!zipEntry.isDirectory() && isImageFile(zipEntry.getName())) {
					// byte[] buffer = new byte[1024];
					byte[] buffer = new byte[(int) zipEntry.getSize()];
					int len;
					while ((len = zis.read(buffer)) > 0) {
						
						// use the input stream to process each image file
						InputStream imageIS = new ByteArrayInputStream(buffer, 0, len);
						
						// save image into S3 
						try {
							String fileExt = getFileExtension(zipEntry.getName()); // could be null
							System.out.printf(">>> fileExt: %s\n", fileExt); 
							Map<String, String> userData = new HashMap<>();
							userData.put("name", name);
							userData.put("title", title);
							userData.put("comments", comments); 
		
							ObjectMetadata metadata = new ObjectMetadata(); 
							metadata.setContentType("image/" + fileExt);
							metadata.setContentLength(buffer.length);
							metadata.setUserMetadata(userData);
		
							PutObjectRequest putReq = new PutObjectRequest(bucketName, title, imageIS, metadata); // set title as key
							putReq = putReq.withCannedAcl(CannedAccessControlList.PublicRead); 
							S3Client.putObject(putReq); 
							System.out.printf(">>> Put Request: %s\n", putReq.toString());
							return true; 
						} catch (AmazonS3Exception ex) {
							ex.printStackTrace();
							return false; 
						}
					}
				}
			}
			// close resources 
			zis.closeEntry();
			zis.close();
		} catch (IOException ex2) {
			ex2.printStackTrace(); 
			return false; 
		}
		return false;
	}